@using Humanizer;
@using BlazorInputFile
<div class="pdfileexplorer">
	<PDSplitter GutterSize="6">

		<PDSplitPanel Size="1">

			<PDContextMenu Items="TreeContextItems" BeforeShow="OnTreeBeforeShowContextMenu" ItemClick="OnTreeContextMenuItemClick">

				<PDTree @ref="_tree" TItem="FileExplorerItem" DataProvider="DataProvider" LoadOnDemand="true" AllowSelection="true" AllowEdit="true"
						KeyField="x => x.Path" ParentKeyField="x => x.ParentPath" TextField="x => x.Name" IsLeaf="x => x.EntryType == FileExplorerItemType.File"
						SelectionChange="OnTreeSelectionChange" ItemsLoaded="OnTreeItemsLoaded" NodeUpdated="OnTreeNodeUpdated"
						BeforeEdit="OnTreeBeforeEdit" AfterEdit="OnTreeAfterEdit">
					<NodeTemplate>
						<span class="@( $"{(context?.Data?.IsHidden ?? false ? "file-hidden" : "")} {(context?.Data?.IsSystem ?? false ? "file-system" : "")}") ">
							<i class="far @(context?.IsExpanded ?? false ? "fa-folder-open" : "fa-folder")"></i>
							<span>@context?.Data?.Name</span>
						</span>
					</NodeTemplate>
				</PDTree>

			</PDContextMenu>

		</PDSplitPanel>

		<PDSplitPanel Size="3">

			<InputFile OnChange="OnInputFileChanged" />

			<PDContextMenu Items="TableContextItems" BeforeShow="OnTableBeforeShowContextMenu" ItemClick="OnTableContextMenuItemClick">

				<PDTable @ref="_table" TItem="FileExplorerItem" DataProvider="DataProvider" SearchText="@FolderPath" ColumnsConfig="ColumnConfig"
						 SelectionMode="TableSelectionMode.Single" KeyField="x => x.Path" AllowEdit="true"
						 DoubleClick="OnTableDoubleClick" ItemsLoaded="OnTableItemsLoaded"
						 BeforeEdit="OnTableBeforeEdit" AfterEdit="OnTableAfterEdit"
						 RowClass="@(x => $"{(x.IsHidden ? "file-hidden": "")} {(x.IsSystem ? "file-system" : "")}")">

					<PDColumn TItem="FileExplorerItem" Id="Icon" Field="x => x.EntryType" Editable="false">
						<Template>
							<i class="far @(context.EntryType == FileExplorerItemType.File ? "fa-file" : "fa-folder")"></i>
						</Template>
					</PDColumn>
					<PDColumn TItem="FileExplorerItem" Id="Name" Field="x => x.Name">
						<Template>
							<span class="">@context.Name</span>
						</Template>
					</PDColumn>
					<PDColumn TItem="FileExplorerItem" Id="Type" Field="x => x.EntryType" Editable="false">
						<Template>
							<span class="text-nowrap">
								@(context.EntryType == FileExplorerItemType.Directory
								? "File Folder"
								: ($"{context.FileExtension.ToUpper()} File").Trim() )
							</span>
						</Template>
					</PDColumn>
					<PDColumn TItem="FileExplorerItem" Id="Size" Field="x => x.FileSize" Editable="false">
						<Template>
							<span title="@(context.FileSize.ToString("0,0")) bytes">
								@(context.EntryType == FileExplorerItemType.Directory ? null : context.FileSize.Bytes().Humanize("#"))
							</span>
						</Template>
					</PDColumn>
					<PDColumn TItem="FileExplorerItem" Id="Created" Field="x => x.DateCreated" Editable="false">
						<Template>
							@if (context.DateCreated != DateTime.MinValue)
							{
								<span class="nowrap">
									@context.DateCreated.ToLocalTime().ToString("dd/MM/yyyy HH:mm")
								</span>
							}
						</Template>
					</PDColumn>
					<PDColumn TItem="FileExplorerItem" Id="Modified" Field="x => x.DateModified" Editable="false">
						<Template>
							@if (context.DateModified != DateTime.MinValue)
							{
								<span class="text-nowrap" title="@(context.DateModified.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss"))">
									@context.DateModified.ToLocalTime().ToString("dd/MM/yyyy HH:mm")
								</span>
							}
						</Template>
					</PDColumn>

				</PDTable>

			</PDContextMenu>

		</PDSplitPanel>

	</PDSplitter>
</div>
