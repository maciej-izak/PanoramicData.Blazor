@page "/pdform3"
@using System.Linq
@using PanoramicData.Blazor.Demo.Data
@using PanoramicData.Blazor.Extensions


<h1>PDForm</h1>

<DemoSourceView SourceFiles="PDFormPage3.razor, PDFormPage3.razor.cs">

	<PDToolbar>

		<PDToolbarPlaceholder>
			<span>Example 3: Form linked to Table</span>
		</PDToolbarPlaceholder>

		<PDToolbarButton Text="Create Person"
						 ShiftRight="true"
						 CssClass="btn-primary"
						 Click="OnCreatePerson" />

		<PDToolbarButton Text="Refresh"
						 CssClass="btn-secondary"
						 Click="async () => await Table!.RefreshAsync()" />

	</PDToolbar>

	<div class="d-flex">
		<div>
			<PDTable @ref="Table"
					 TItem="Person"
					 DataProvider="PersonDataProvider"
					 KeyField="x => x.Id"
					 SelectionMode="TableSelectionMode.Single"
					 SelectionChanged="OnSelectionChanged" >

				<PDColumn TItem="Person"
						  Field="x => x.Id"
						  ShowInList="false"
						  ShowInCreate="(_) => false"
						  ReadOnlyInEdit="(_) => true" />

				<PDColumn TItem="Person"
						  Field="x => x.FirstName"
						  ShowInList="false"
						  ShowInDelete="(_) => true" />

				<PDColumn TItem="Person"
						  Id="InitialsCol"
						  Field="x => x.Initials"
						  ShowInList="false">
					<EditTemplate>
						<!-- custom processing alters typed in text - so always fetch latest value -->
						<!-- for struct types use FormBody.GetFieldValue<T> -->
						@{
							var person = context;
							var field = FormBody.Fields.First(x => x.Id == "InitialsCol");
						}
						<input type="text"
							   class="form-control
						   @FormBody.GetEditorClass(field)"
							   value="@(FormBody.GetFieldStringValue(field, true))"
							   @oninput="OnInitialsInput" />
					</EditTemplate>
				</PDColumn>

				<PDColumn TItem="Person"
						  Field="x => x.LastName"
						  ShowInList="false"
						  Title="Last Name"
						  ShowInDelete="(_) => true" />

				<PDColumn TItem="Person"
						  Id="EmailCol"
						  Field="x => x.Email"
						  ShowInDelete="(_) => true">
					<EditTemplate>
						<!-- no custom processing of input here so no need to get latest value -->
						@{
							var field = FormBody.Fields.First(x => x.Id == "EmailCol");
						}
						<input type="email"
							   class="form-control @FormBody.GetEditorClass(field)"
							   value="@context.Email"
							   @oninput="OnEmailInput" />
					</EditTemplate>
				</PDColumn>


				<PDColumn TItem="Person"
						  Field="x => x.Dob"
						  ShowInList="false"
						  HelpUrl="https://www.dayofbirth.co.uk/"
						  ShowInDelete="@((x) => !x.FirstName.In("Alice", "Carol", "Eve", "Grace", "Heidi", "Judy"))" />

				<PDColumn TItem="Person"
						  Field="x => x.Department"
						  HelpUrl="https://www.dictionary.com/browse/department" />

				<PDColumn TItem="Person"
						  Field="x => x.Location"
						  Options="GetLocationOptions" />

				<PDColumn TItem="Person"
						  Field="x => x.Target"
						  ShowInList="false"
						  ReadOnlyInEdit="(x) => x.Department != Departments.Sales"
						  ReadOnlyInCreate="(x) => x.Department != Departments.Sales" />

				<PDColumn TItem="Person"
						  Field="x => x.AllowLogin"
						  ShowInList="false" />

				<PDColumn TItem="Person"
						  Field="x => x.Password"
						  ShowInList="false"
						  ShowInCreate="(x) => x.AllowLogin"
						  ShowInEdit="(x) => x.AllowLogin"
						  IsPassword="true" />

				<PDColumn TItem="Person"
						  Field="x => x.Comments"
						  ShowInList="false"
						  ShowInCreate="(_) => false"
						  IsTextArea="true"
						  TextAreaRows="6" />

				<PDColumn TItem="Person"
						  Field="x => x.DateCreated"
						  Format="dd/MM/yy"
						  ShowInList="false"
						  ShowInEdit="(_) => false"
						  ShowInCreate="(_) => false" />

				<PDColumn TItem="Person"
						  Field="x => x.DateModified"
						  Format="dd/MM/yy"
						  ShowInEdit="(_) => false"
						  ShowInCreate="(_) => false" />

			</PDTable>
		</div>

		<div class="form-div">
			<PDForm @ref="Form"
					TItem="Person"
					Item="SelectedPerson"
					DataProvider="PersonDataProvider"
					DefaultMode="FormModes.Empty"
					Error="OnError"
					Deleted="OnPersonDeleted"
					Updated="OnPersonUpdated"
					Created="OnPersonCreated"
					HelpTextMode="HelpTextMode.Toggle">

				<PDFormHeader TItem="Person"
							  ItemDescription="@((x) => $"{x.FirstName} {x.LastName}")"
							  HelpText="This is some help text for the entire form" />

				<PDFormBody @ref="FormBody"
							TItem="Person"
							Table="Table"
							CustomValidate="OnCustomValidate" />

				<PDFormFooter TItem="Person"
							  Click="OnFooterClick" />
			</PDForm>
		</div>

	</div>

	<EventView />

	<div>
		<div class="form-group p-1">

		</div>

	</div>

</DemoSourceView>

<style>
	.form-div {
		margin-left: 10px;
	}

	.pd-form-header {
		padding-bottom: 5px;
	}

	.pd-form-header.haschanges {
		border: 2px solid blue;
	}
</style>
